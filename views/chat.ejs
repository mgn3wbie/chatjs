<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Chat</title>
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"
      integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH"
      crossorigin="anonymous"
    />
    <link rel="stylesheet" href="/css/style.css" />
    <script
      src="https://cdn.socket.io/4.8.1/socket.io.min.js"
      integrity="sha384-mkQ3/7FUtcGyoppY6bz/PORYoGqOl7/aSUMn2ymDOJcapfS6PHqxhRTMh1RR0Q6+"
      crossorigin="anonymous"
    ></script>
  </head>
  <body>
    <!-- La fenetre de chat dans laquelle l'utilisateur peut lire et ecrire des messages -->
    <div class="chat-container">
      <div class="chat-header">
        <h2>Chat</h2>
      </div>
      <div class="chat-messages-container">
        <div class="chat-messages" id="chat-messages">
          <!-- Les messages seront affichés ici -->
        </div>
      </div>
      <div class="chat-footer d-flex justify-content-between">
        <input
          type="text"
          id="message-input"
          class="mx-3"
          placeholder="Tapez votre message..."
        />
        <button id="send-button" type="submit" class="mx-3">Envoyer</button>
      </div>
    </div>
  </body>
  <script>
    //  établit une connexion au serveur Socket.IO. Par défaut, il se connecte à l’URL du serveur hôte.
    const socket = io();
    let messages = [];

    // Écoute de l'événement "server-message" envoyé par le serveur
    socket.on("server-message", (msg) => {
      // creation of a div containing the name of the sender, the content of the message and its date
      let div = document.createElement("div");
      if (msg.nickname == "<%= nickname %>") {
        div.style.backgroundColor = "#d1f2eb";
      }
      let nickP = document.createElement("span");
      nickP.innerText = msg.nickname + " : ";
      nickP.classList.add("nickname");

      let messageP = document.createElement("span");
      messageP.classList.add("message");
      messageP.innerText = msg.content;
      messageP.appendChild(document.createElement("br"));

      let dateP = document.createElement("p");
      dateP.classList.add("date");
      dateP.innerText = " at " + dateToHoursMinsAndSecs(msg.date);

      div.appendChild(nickP);
      div.appendChild(messageP);
      div.appendChild(dateP);

      document.getElementById("chat-messages").appendChild(div);
    });

    let button = document.getElementById("send-button");
    button.addEventListener("click", (event) => {
      event.preventDefault();
      let message = document.getElementById("message-input").value;
      socket.emit("client-message", {
        nickname: "<%= nickname %>",
        content: message,
        date: new Date(),
      });
      document.getElementById("message-input").value = "";
    });

    function dateToHoursMinsAndSecs(d) {
      d = new Date(d);
      let pm = d.getHours() >= 12;
      let hour12 = d.getHours() % 12;
      if (!hour12) hour12 += 12;
      let minute = d.getMinutes();
      let second = d.getSeconds();
      return `${hour12}:${minute}:${second} ${pm ? "pm" : "am"}`;
    }
  </script>
</html>
